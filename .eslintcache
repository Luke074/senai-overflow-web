[{"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\index.js":"1","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\App.js":"2","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\router.js":"3","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\GlobalStyle.js":"4","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\services\\security.js":"5","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Login\\index.js":"6","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Register\\index.js":"7","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Home\\index.js":"8","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\services\\api.js":"9","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Login\\style.js":"10","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Register\\style.js":"11","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Home\\style.js":"12","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\utils.js":"13","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\modal\\style.js":"14","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\modal\\index.js":"15","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\input\\index.js":"16","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\tag\\index.js":"17","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\Loading\\index.js":"18","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\Alert\\index.js":"19","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\select\\index.js":"20","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\tag\\style.js":"21","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\input\\style.js":"22","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\Loading\\style.js":"23","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\Alert\\style.js":"24","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\select\\style.js":"25"},{"size":207,"mtime":1614186088118,"results":"26","hashOfConfig":"27"},{"size":200,"mtime":1614186088105,"results":"28","hashOfConfig":"27"},{"size":979,"mtime":1614186088121,"results":"29","hashOfConfig":"27"},{"size":1490,"mtime":1614186088106,"results":"30","hashOfConfig":"27"},{"size":1211,"mtime":1614186088122,"results":"31","hashOfConfig":"27"},{"size":2495,"mtime":1614186088120,"results":"32","hashOfConfig":"27"},{"size":3228,"mtime":1614186088120,"results":"33","hashOfConfig":"27"},{"size":12446,"mtime":1614186088119,"results":"34","hashOfConfig":"27"},{"size":139,"mtime":1614191832501,"results":"35","hashOfConfig":"27"},{"size":1838,"mtime":1614186088120,"results":"36","hashOfConfig":"27"},{"size":1838,"mtime":1614186088121,"results":"37","hashOfConfig":"27"},{"size":5104,"mtime":1614186088119,"results":"38","hashOfConfig":"27"},{"size":573,"mtime":1614186088122,"results":"39","hashOfConfig":"27"},{"size":1168,"mtime":1614186088115,"results":"40","hashOfConfig":"27"},{"size":336,"mtime":1614186088115,"results":"41","hashOfConfig":"27"},{"size":328,"mtime":1614186088113,"results":"42","hashOfConfig":"27"},{"size":220,"mtime":1614186088117,"results":"43","hashOfConfig":"27"},{"size":272,"mtime":1614186088112,"results":"44","hashOfConfig":"27"},{"size":778,"mtime":1614186088111,"results":"45","hashOfConfig":"27"},{"size":430,"mtime":1614186088116,"results":"46","hashOfConfig":"27"},{"size":470,"mtime":1614186088117,"results":"47","hashOfConfig":"27"},{"size":783,"mtime":1614186088114,"results":"48","hashOfConfig":"27"},{"size":589,"mtime":1614186088113,"results":"49","hashOfConfig":"27"},{"size":688,"mtime":1614186088112,"results":"50","hashOfConfig":"27"},{"size":255,"mtime":1614186088116,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1djuw6e",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\index.js",[],["107","108"],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\App.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\router.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\GlobalStyle.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\services\\security.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Login\\index.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Register\\index.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Home\\index.js",["109","110","111","112","113"],"import { useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactEmbedGist from \"react-embed-gist\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  ProfileContainer,\r\n  FeedContainer,\r\n  ActionsContainer,\r\n  QuestionCard,\r\n  Logo,\r\n  IconSignOut,\r\n  GistIcon,\r\n  ContainerGist,\r\n  SearchBar,\r\n} from \"./style\";\r\n\r\nimport Input from \"../../components/input\";\r\nimport { format } from \"date-fns\";\r\nimport imgProfile from \"../../assets/foto_perfil.png\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport { api } from \"../../services/api\";\r\nimport { getUser, signOut, setUser } from \"../../services/security\";\r\nimport Modal from \"../../components/modal\";\r\nimport { FormNewQuestion } from \"../../components/modal/style\";\r\nimport Select from \"../../components/select\";\r\nimport Tag from \"../../components/tag\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { validSquaredImage } from \"../../utils\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\n\r\nfunction NewQuestion({ handleReload, handleLoading }) {\r\n  const [newQuestion, setNewQuestion] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    gist: \"\",\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [categoriesSel, setCategoriesSel] = useState([]);\r\n\r\n  const [image, setImage] = useState(null);\r\n\r\n  const imageRef = useRef();\r\n  const categoriesRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const loadCategories = async () => {\r\n      try {\r\n        const response = await api.get(\"/categories\");\r\n        setCategories(response.data);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    };\r\n\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const handleImage = (e) => {\r\n    if (e.target.files[0]) {\r\n      imageRef.current.src = URL.createObjectURL(e.target.files[0]);\r\n      imageRef.current.style.display = \"flex\";\r\n    } else {\r\n      imageRef.current.src = \"\";\r\n      imageRef.current.style.display = \"none\";\r\n    }\r\n\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleCategories = (e) => {\r\n    const idSel = e.target.value;\r\n\r\n    const categorySel = categories.find((c) => c.id.toString() === idSel);\r\n\r\n    if (categorySel && !categoriesSel.includes(categorySel)) {\r\n      setCategoriesSel([...categoriesSel, categorySel]);\r\n    }\r\n\r\n    e.target[e.target.selectedIndex].disable = true;\r\n    e.target.value = \"\";\r\n  };\r\n  const handleUnselCategory = (idUnsel) => {\r\n    setCategoriesSel(categoriesSel.filter((c) => c.id !== idUnsel));\r\n\r\n    const { options } = categoriesRef.current;\r\n\r\n    for (var i = 0; i < options.length; i++) {\r\n      if (options[i].value === idUnsel.toString()) options[i].disable = false;\r\n    }\r\n  };\r\n  const handlerInput = (e) => {\r\n    setNewQuestion({ ...newQuestion, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleAddNewQuestion = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData();\r\n\r\n    data.append(\"title\", newQuestion.title);\r\n    data.append(\"description\", newQuestion.description);\r\n\r\n    const categories = categoriesSel.reduce((s, c) => (s += c.id + \",\"), \"\");\r\n\r\n    data.append(\"categories\", categories.substr(0, categories.length - 1));\r\n\r\n    if (image) data.append(\"image\", image);\r\n    if (newQuestion.gist) data.append(\"gist\", newQuestion.gist);\r\n\r\n    try {\r\n      handleLoading(true);\r\n\r\n      await api.post(\"/questions\", data, {\r\n        headers: {\r\n          \"Content-type\": \"multipart/from-data\",\r\n        },\r\n      });\r\n\r\n      handleReload();\r\n    } catch (error) {\r\n      handleLoading(false);\r\n\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormNewQuestion onSubmit={handleAddNewQuestion}>\r\n        <Input\r\n          id=\"title\"\r\n          label=\"Título\"\r\n          value={newQuestion.title}\r\n          handler={handlerInput}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          label=\"Descrição\"\r\n          value={newQuestion.description}\r\n          handler={handlerInput}\r\n        />\r\n        <Input\r\n          id=\"gist\"\r\n          label=\"Gist\"\r\n          value={newQuestion.gist}\r\n          handler={handlerInput}\r\n        />\r\n        <Select\r\n          id=\"categories\"\r\n          label=\"Categorias\"\r\n          handler={handleCategories}\r\n          ref={categoriesRef}\r\n        >\r\n          <option value=\"\" selected disabled>\r\n            Selecione\r\n          </option>\r\n          {categories.map((c) => (\r\n            <option key={c.id} value={c.id}>\r\n              {c.description}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n        <div>\r\n          {categoriesSel.map((c) => (\r\n            <Tag\r\n              key={c.id}\r\n              info={c.description}\r\n              handleClose={() => handleUnselCategory(c.id)}\r\n            ></Tag>\r\n          ))}\r\n        </div>\r\n        <input type=\"file\" onChange={handleImage} />\r\n        <img alt=\"Pré-visualização\" ref={imageRef} />\r\n        <button>Enviar</button>\r\n      </FormNewQuestion>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Profile({ setShowLoading, handleReload, setMessage }) {\r\n  const [student, setStudent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setStudent(getUser());\r\n  }, []);\r\n\r\n  const handleImage = async (e) => {\r\n    if (!e.target.files[0]) return;\r\n\r\n    try {\r\n      await validSquaredImage(e.target.files[0]);\r\n\r\n      const data = new FormData();\r\n\r\n      data.append(\"image\", e.target.files[0]);\r\n      setShowLoading(true);\r\n\r\n      const response = await api.post(`/students/${student.id}/images`, data);\r\n\r\n      setTimeout(() => {\r\n        setStudent({ ...student, image: response.data.image });\r\n        handleReload();\r\n      }, 1000);\r\n\r\n      setUser({ ...student, image: response.data.image });\r\n    } catch (error) {\r\n      alert(error);\r\n      setShowLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <img src={student.image || imgProfile} alt=\"Imagem de Perfil\" />\r\n        <label htmlFor=\"editImageProfile\">Editar Foto</label>\r\n        <input id=\"editImageProfile\" type=\"file\" onChange={handleImage} />\r\n      </section>\r\n      <section>\r\n        <strong>NOME:</strong>\r\n        <p>{student.name}</p>\r\n      </section>\r\n      <section>\r\n        <strong>RA:</strong>\r\n        <p>{student.ra}</p>\r\n      </section>\r\n      <section>\r\n        <strong>E-MAIL:</strong>\r\n        <p>{student.email}</p>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Answer({ answer }) {\r\n  const student = getUser();\r\n\r\n  return (\r\n    <section>\r\n      <header>\r\n        <img src={answer.Student.image || imgProfile} alt=\"imagem perfil\" />\r\n        <strong>\r\n          por{\" \"}\r\n          {student.studentId === answer.Student.id\r\n            ? \" Você\"\r\n            : answer.Student.name}\r\n        </strong>\r\n        <p> {format(new Date(answer.created_at), \"dd/MM/yyyy 'as' HH:mm\")}</p>\r\n      </header>\r\n      <p>{answer.description}</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction Question({ question, handleLoading, setCurrentGist }) {\r\n  const [showAnswers, setShowAnswers] = useState(false);\r\n\r\n  const [newAnswer, setNewAnswer] = useState(\"\");\r\n\r\n  const [answers, setAnswers] = useState(question.Answers);\r\n\r\n  const qtdAnswers = answers.length;\r\n\r\n  useEffect(() => {\r\n    setAnswers(question.Answers);\r\n  }, [question.Answers]);\r\n\r\n  const handleAddAnswer = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newAnswer.length < 10) {\r\n      return alert(\"A resposta deve ter no mínimo 10 caracteres\");\r\n    }\r\n\r\n    try {\r\n      handleLoading(true);\r\n      const response = await api.post(`/questions/${question.id}/answers`, {\r\n        description: newAnswer,\r\n      });\r\n\r\n      const aluno = getUser();\r\n\r\n      const answerAdded = {\r\n        id: response.data.id,\r\n        description: newAnswer,\r\n        created_at: response.data.createdAt,\r\n        Student: {\r\n          id: aluno.studentId,\r\n          name: aluno.name,\r\n          image: aluno.image,\r\n        },\r\n      };\r\n\r\n      setAnswers([...answers, answerAdded]);\r\n\r\n      setNewAnswer(\"\");\r\n      handleLoading(false);\r\n    } catch (error) {\r\n      handleLoading(false);\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const student = getUser();\r\n\r\n  return (\r\n    <QuestionCard>\r\n      <header>\r\n        <img src={question.Student.image || imgProfile} />\r\n        <strong>\r\n          por{\" \"}\r\n          {student.studentId === question.Student.id\r\n            ? \"Você\"\r\n            : question.Student.name}\r\n        </strong>\r\n        <p>\r\n          em {format(new Date(question.created_at), \"dd/MM/yyyy 'as' HH:mm\")}\r\n        </p>\r\n        {question.gist && (\r\n          <GistIcon onClick={() => setCurrentGist(question.gist)} />\r\n        )}\r\n      </header>\r\n      <section>\r\n        <strong>{question.title}</strong>\r\n        <p>{question.description}</p>\r\n        <img src={question.image} />\r\n      </section>\r\n      <footer>\r\n        <h1 onClick={() => setShowAnswers(!showAnswers)}>\r\n          {qtdAnswers === 0 ? (\r\n            \"Seja o primeiro a responder\"\r\n          ) : (\r\n            <>\r\n              {qtdAnswers}\r\n              {qtdAnswers > 1 ? \" Respostas\" : \" Resposta\"}\r\n            </>\r\n          )}\r\n        </h1>\r\n        {showAnswers && (\r\n          <>\r\n            {answers.map((answer) => (\r\n              <Answer answer={answer} />\r\n            ))}\r\n          </>\r\n        )}\r\n        <form onSubmit={handleAddAnswer}>\r\n          <textarea\r\n            minLength={10}\r\n            placeholder=\"Responda essa dúvida!\"\r\n            onChange={(e) => setNewAnswer(e.target.value)}\r\n            required\r\n            value={newAnswer}\r\n          ></textarea>\r\n          <button>Enviar</button>\r\n        </form>\r\n      </footer>\r\n    </QuestionCard>\r\n  );\r\n}\r\n\r\nfunction Gist({ gist, handleClose }) {\r\n  if (gist) {\r\n    const formatedGist = gist.split(\".com/\").pop();\r\n    return (\r\n      <Modal\r\n        title=\"Exemplo de codigo\"\r\n        handleClose={() => handleClose(undefined)}\r\n      >\r\n        <ContainerGist>\r\n          <ReactEmbedGist gist={formatedGist} />\r\n        </ContainerGist>\r\n      </Modal>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const [showLoading, setShowLoading] = useState();\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const [reload, setReload] = useState(null);\r\n\r\n  const [showNewQuestion, setShowNewQuestion] = useState();\r\n\r\n  const [currentGist, setCurrentGist] = useState(undefined);\r\n\r\n  const [search, setSearch] = useState();\r\n\r\n  useEffect(() => {\r\n    setShowLoading(true);\r\n\r\n    const loadQuestions = async () => {\r\n      const response = await api.get(\"/feed\");\r\n\r\n      setQuestions(response.data);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    loadQuestions();\r\n  }, [reload]);\r\n\r\n  const handleSignOut = () => {\r\n    signOut();\r\n\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  const handleReload = () => {\r\n    setShowNewQuestion(false);\r\n    setReload(Math.random());\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {showLoading && <Loading />}\r\n      <Gist gist={currentGist} handleClose={setCurrentGist} />\r\n      {showNewQuestion && (\r\n        <Modal\r\n          title=\"Faça uma pergunta\"\r\n          handleClose={() => setShowNewQuestion(false)}\r\n        >\r\n          <NewQuestion\r\n            handleReload={handleReload}\r\n            handleLoading={setShowLoading}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <Container>\r\n        <Header>\r\n          <Logo src={logo} onClick={handleReload} />\r\n          <SearchBar>\r\n            <Input\r\n              id=\"search\"\r\n              type=\"search\"\r\n              label=\"Procure\"\r\n            />\r\n            <button>pesquisar</button>\r\n          </SearchBar>\r\n          <IconSignOut onClick={handleSignOut} />\r\n        </Header>\r\n        <Content>\r\n          <ProfileContainer>\r\n            <Profile\r\n              handleReload={handleReload}\r\n              setShowLoading={setShowLoading}\r\n              // setMessage={setMessage}\r\n            />\r\n          </ProfileContainer>\r\n          <FeedContainer>\r\n            {questions.map((q) => (\r\n              <Question\r\n                question={q}\r\n                handleLoading={setShowLoading}\r\n                setCurrentGist={setCurrentGist}\r\n              />\r\n            ))}\r\n          </FeedContainer>\r\n          <ActionsContainer>\r\n            <button onClick={() => setShowNewQuestion(true)}>\r\n              Fazer uma pergunta\r\n            </button>\r\n          </ActionsContainer>\r\n        </Content>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\services\\api.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Login\\style.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Register\\style.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\pages\\Home\\style.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\utils.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\modal\\style.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\modal\\index.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\input\\index.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\tag\\index.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\Loading\\index.js",["114"],"import {} from \"./style\";\r\nimport { Container } from \"./style\";\r\n\r\nimport imgReload from \"../../assets/reload.png\"\r\n\r\nfunction Loading() {\r\n  return(\r\n    <Container>\r\n      <img src={imgReload}/>\r\n      Carregando ...\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Loading;","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\Alert\\index.js",["115"],"import { } from \"./style\";\r\nimport { Container } from \"./style\";\r\nimport { useRef, useEffect } from \"react\";\r\n\r\nfunction Alert({ message, type, handleClose }) {\r\n\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n\r\n    if (message) {\r\n      containerRef.current.style.width = \"300px\";\r\n\r\n      setTimeout(() => {\r\n        handleClose(undefined)\r\n      }, 4000);\r\n\r\n    } else {\r\n      containerRef.current.style.width = \"0px\";\r\n    }\r\n\r\n  }, [message]);\r\n\r\n  return (\r\n    <Container type={type} ref={containerRef}>\r\n      {message && (\r\n        <>\r\n          <span onClick={() => handleClose(undefined)}>&times;</span>\r\n          <h1>{message.title}</h1>\r\n          <p>{message.description}</p>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Alert;","C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\select\\index.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\tag\\style.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\input\\style.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\Loading\\style.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\Alert\\style.js",[],"C:\\Users\\20185482\\Documents\\senai_overflow_web\\src\\components\\select\\style.js",[],["116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":31,"column":10,"nodeType":"124","messageId":"125","endLine":31,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":313,"column":9,"nodeType":"128","endLine":313,"endColumn":59},{"ruleId":"126","severity":1,"message":"127","line":330,"column":9,"nodeType":"128","endLine":330,"endColumn":37},{"ruleId":"122","severity":1,"message":"129","line":396,"column":10,"nodeType":"124","messageId":"125","endLine":396,"endColumn":16},{"ruleId":"122","severity":1,"message":"130","line":396,"column":18,"nodeType":"124","messageId":"125","endLine":396,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":9,"column":7,"nodeType":"128","endLine":9,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":22,"column":6,"nodeType":"133","endLine":22,"endColumn":15,"suggestions":"134"},{"ruleId":"118","replacedBy":"135"},{"ruleId":"120","replacedBy":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'FaGithub' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClose'. Either include it or remove the dependency array. If 'handleClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["139"],["137"],["138"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [handleClose, message]",{"range":"142","text":"143"},[450,459],"[handleClose, message]"]